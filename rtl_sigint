#!/bin/bash

source spinner;

THIS=$$;
ME="$(basename $0)";


#config
DATA_DIR=${HOME}/rtl_sigint
RAW_DIR=${DATA_DIR}/raw
duration=120
scan_type="default"
verbose=false
log=false
logfile="/tmp/rtl_sigint.log"
network=true
wlan=true
rtl=true
banner=true
target_host="archive.org"
colour=true

if ! options=$(getopt -u -n "$ME" -o d:t:h:nvlwrbc -l duration:,type:,target_host:,no-network,verbose,log,no-wlan.no-radio,no-banner,no-colour -- "$@")
then
	exit 1
fi

set -- $options

while [ $# -gt 0 ]
do
    case $1 in
    -d|--duration) duration="$2" ; shift;;
    -n|--no-network) network=false ;;
    -t|--type) scan_type="$2" ; shift;;
    -h|--target-host) target_host="$2" ; shift;;
    -v|--verbose) verbose=true ;;
    -l|--log) log=true ;;
    -w|--no-wlan) wlan=false ;;
    -r|--no-radio) rtl=false ;;
    -b|--no-banner) banner=false ;;
    -c|--no-colour) colour=false ;;
    (--) shift; break;;
    (-*) echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
    (*) break;;
    esac
    shift
done

PIDS=$(pgrep -d" " $ME);
for PID in $PIDS
do
	[[ "$PID" -ne "$THIS" ]] && kill -9 -"$PID";
done

mkdir -p ${RAW_DIR}

NC='\033[0m' # No Color
RED=${NC}
GREEN=${NC}
ORANGE=${NC}
if $colour
then
RED='\033[1;31m'
GREEN='\033[1;32m'
ORANGE='\033[1;33m'
fi

if $banner
then
IFS='' read -r -d '' ban <<"BANNER"
                   __             __                    __
  _________  ____  / /__________ _/ /_  ____ _____  ____/ /
 / ___/ __ \/ __ \/ __/ ___/ __ `/ __ \/ __ `/ __ \/ __  /
/ /__/ /_/ / / / / /_/ /  / /_/ / /_/ / /_/ / / / / /_/ /
\___/\____/_/ /_/\__/_/   \__,_/_.___/\__,_/_/ /_/\__,_/
RTL-SDR, Network and WiFi Privacy Scanner
BANNER

printf "${RED}${ban}${NC}"

fi


if $rtl 
then

for f in "433.92M" "868.35M"; do
	printf "${GREEN}Scanning ${f} microband for short range devices over $duration seconds"
	mkdir -p ${RAW_DIR}/rtl_433
	(rtl_433 -T $duration -f ${f} -G -F json:${RAW_DIR}/rtl_433/${f}.json >/dev/null 2>&1;) &
	spinner $!
	printf "\n${ORANGE}Detected N signals from X devices.${NC} \n"
done 

declare -a rp_f=("49" "50" ".025" "139" "140" ".1" "173.225" "180" ".1" "398" "399.5" ".1" "854.75" "860.725" ".025" "864.15" "868.05" ".1")
rp_fl=${#rp_f[@]}
for (( i=1; i<${rp_fl}+1; i++ ));
do
	start="${rp_f[$i-1]}M";
	end="${rp_f[$i]}M";
	step="${rp_f[$i+1]}M";	
	printf "${GREEN}Scanning ${start} - ${end} in $step steps for signals over $duration seconds"
        mkdir -p ${RAW_DIR}/rtl_power
        (/usr/bin/rtl_power -f ${start}:${end}:${step} -i 1 -e ${duration}s >${RAW_DIR}/rtl_power/${start}-${end} 2>/dev/null;) &
	#rtl_power -f 48M:50M:.025M -g 30 -i 1 | awk 'BEGIN {t=0} {if (t==0) {t=$2; n=0; s=0}; if (t==$2) {s+=$7; n++} else {print s/n; t=0}}'
	spinner $!
        printf "\n${ORANGE}Detected N signals.${NC} \n"
	i=$i+2
done


fi

if $network
then
printf "${GREEN}Scanning for mDNS entries"
mkdir -p ${RAW_DIR}/net
(avahi-browse --all -p -f -t >${RAW_DIR}/net/avahi 2>/dev/null; ) &
spinner $!
printf "\n${ORANGE}Detected N mDNS entries.${NC} \n"
#basic network things

printf "${GREEN}Running traceroute"
mkdir -p ${RAW_DIR}/net
(traceroute $target_host >${RAW_DIR}/net/traceroute 2>/dev/null; ) &
spinner $!
printf "\n${ORANGE}N hops detected to $target_host${NC} \n"


printf "${GREEN}Running ping"
mkdir -p ${RAW_DIR}/net
(ping -c 10 $target_host >${RAW_DIR}/net/ping 2>/dev/null; ) &
spinner $!
printf "\n${ORANGE}N av/max/min latency detected to $target_host${NC} \n"

#basic network things
#nmap
#hcitool scan
#btscanner

fi


if $wlan
then
echo "2.4GHz/5GHz shenanigans"
	#tshark wireshark and bluetooth things
	#https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html
	#http://www.iprogrammable.com/2017/11/10/how-to-use-wireshark-to-get-ip-camera-rtsp-url/
#bettercap

fi
