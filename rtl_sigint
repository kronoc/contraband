#!/bin/bash

source spinner;

THIS=$$;
ME="$(basename $0)";

DATA_DIR=${HOME}/rtl_sigint
RAW_DIR=${DATA_DIR}/raw

mkdir -p ${RAW_DIR}


duration=120
scan_type="default"
verbose=false
log=false
logfile="/tmp/rtl_sigint.log"
network=true
wlan=true
rtl=true
target_host="archive.org"

if ! options=$(getopt -u -n "$ME" -o d:t:h:nvlwr -l duration:,type:,target_host:,no-network,verbose,log,no-wlan.no-radio -- "$@")
then
	exit 1
fi

set -- $options

while [ $# -gt 0 ]
do
    case $1 in
    -d|--duration) duration="$2" ; shift;;
    -n|--no-network) network=false ;;
    -t|--type) scan_type="$2" ; shift;;
    -h|--target-host) target_host="$2" ; shift;;
    -v|--verbose) verbose=true ;;
    -l|--log) log=true ;;
    -w|--no-wlan) wlan=false ;;
    -r|--no-radio) rtl=false ;;
    (--) shift; break;;
    (-*) echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
    (*) break;;
    esac
    shift
done

PIDS=$(pgrep -d" " $ME);
for PID in $PIDS
do
	[[ "$PID" -ne "$THIS" ]] && kill -9 -"$PID";
done

RED='\033[1;31m'
GREEN='\033[1;32m'
ORANGE='\033[1;33m'
NC='\033[0m' # No Color

if $rtl 
then

printf "${GREEN}Scanning 433MHz for short range devices for $duration seconds"
mkdir -p ${RAW_DIR}/rtl_433
(rtl_433 -T $duration -G -F json:${RAW_DIR}/rtl_433/433M.json >/dev/null 2>&1;) &
spinner $!
printf "\n${ORANGE}Detected N signals from X devices.${NC} \n"

printf "${GREEN}Scanning 868MHz for short range devices for $duration seconds"
mkdir -p ${RAW_DIR}/rtl_433
(rtl_433 -T $duration -f 868M -G -F json:${RAW_DIR}/rtl_433/868M.json >/dev/null 2>&1;) &
spinner $!
printf "\n${ORANGE}Detected N signals from X devices.${NC} \n"

#run rtl_power scan




fi

if $network
then
printf "${GREEN}Scanning for mDNS entries"
mkdir -p ${RAW_DIR}/net
(avahi-browse --all -p -f -t >${RAW_DIR}/net/avahi 2>/dev/null; ) &
spinner $!
printf "\n${ORANGE}Detected N mDNS entries.${NC} \n"
#basic network things

printf "${GREEN}Running traceroute"
mkdir -p ${RAW_DIR}/net
(traceroute $target_host >${RAW_DIR}/net/traceroute 2>/dev/null; ) &
spinner $!
printf "\n${ORANGE}N hops detected to $target_host${NC} \n"



printf "${GREEN}Running ping"
mkdir -p ${RAW_DIR}/net
(ping -c 10 $target_host >${RAW_DIR}/net/ping 2>/dev/null; ) &
spinner $!
printf "\n${ORANGE}N av/max/min latency detected to $target_host${NC} \n"

#basic network things
#nmap

#hcitool scan
#btscanner






fi


if $wlan
then
echo "test"
	#tshark wireshark and bluetooth things
	#https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html
	#http://www.iprogrammable.com/2017/11/10/how-to-use-wireshark-to-get-ip-camera-rtsp-url/
#bettercap

fi
